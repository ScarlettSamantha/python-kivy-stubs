"""
This type stub file was generated by pyright.
"""

import os
from kivy.input.motionevent import MotionEvent
from kivy.input.provider import MotionEventProvider

'''
Native support of Wacom tablet from linuxwacom driver
=====================================================

To configure LinuxWacom, add this to your configuration::

    [input]
    pen = linuxwacom,/dev/input/event2,mode=pen
    finger = linuxwacom,/dev/input/event3,mode=touch

.. note::
    You must have read access to the input event.

You can use a custom range for the X, Y and pressure values.
On some drivers, the range reported is invalid.
To fix that, you can add these options to the argument line:

* invert_x : 1 to invert X axis
* invert_y : 1 to invert Y axis
* min_position_x : X minimum
* max_position_x : X maximum
* min_position_y : Y minimum
* max_position_y : Y maximum
* min_pressure : pressure minimum
* max_pressure : pressure maximum
'''
__all__ = ('LinuxWacomMotionEventProvider', 'LinuxWacomMotionEvent')
class LinuxWacomMotionEvent(MotionEvent):
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def depack(self, args): # -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


if 'KIVY_DOC' in os.environ:
    LinuxWacomMotionEventProvider = ...
else:
    EV_SYN = ...
    EV_KEY = ...
    EV_REL = ...
    EV_ABS = ...
    EV_MSC = ...
    EV_SW = ...
    EV_LED = ...
    EV_SND = ...
    EV_REP = ...
    EV_FF = ...
    EV_PWR = ...
    EV_FF_STATUS = ...
    EV_MAX = ...
    EV_CNT = ...
    KEY_MAX = ...
    SYN_REPORT = ...
    SYN_CONFIG = ...
    SYN_MT_REPORT = ...
    MSC_SERIAL = ...
    MSC_PULSELED = ...
    MSC_GESTURE = ...
    MSC_RAW = ...
    MSC_SCAN = ...
    MSC_MAX = ...
    MSC_CNT = ...
    ABS_X = ...
    ABS_Y = ...
    ABS_PRESSURE = ...
    ABS_MISC = ...
    ABS_MT_TOUCH_MAJOR = ...
    ABS_MT_TOUCH_MINOR = ...
    ABS_MT_WIDTH_MAJOR = ...
    ABS_MT_WIDTH_MINOR = ...
    ABS_MT_ORIENTATION = ...
    ABS_MT_POSITION_X = ...
    ABS_MT_POSITION_Y = ...
    ABS_MT_TOOL_TYPE = ...
    ABS_MT_BLOB_ID = ...
    ABS_MT_TRACKING_ID = ...
    ABS_MT_PRESSURE = ...
    EVIOCGNAME = ...
    EVIOCGBIT = ...
    EVIOCGABS = ...
    struct_input_event_sz = ...
    struct_input_absinfo_sz = ...
    sz_l = ...
    class LinuxWacomMotionEventProvider(MotionEventProvider):
        options = ...
        def __init__(self, device, args) -> None:
            ...
        
        def start(self): # -> None:
            ...
        
        def update(self, dispatch_fn): # -> None:
            ...
        
    
    
